name: Deploy website

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs automatically every hour
  schedule:
    - cron: "0 * * * *"
    
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v4
        with:
          poetry-version: '2.0.1'

      - name: Download images and save to src/show-program/team-photos
        continue-on-error: true
        run: |
          echo ${{ secrets.GOOGLE_GEMINI_SERVICE_ACCOUNT_KEYFILE_BASE64 }} | base64 -d > geminitest-407623-91eaab2a74e8.json
          cd "${{ github.workspace }}/src/extract-team-images"
          poetry install --no-root --no-interaction
          poetry run python main.py
          poetry run python process-images.py "${{ github.workspace }}/src/extract-team-images/team-images.json" "${{ github.workspace }}/src/show-program/team-photos/"

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
          go-version: 1.21.5
          cache-dependency-path: |
            src/show-program/go.sum

      - name: Build site
        run: |
          cd "${{ github.workspace }}/src/show-program"
          mkdir -p output/screenshots
          echo ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEYFILE_BASE64 }} | base64 -d > impro-neuf-management-99d59b5d3102.json
          go run main.go price.go showtype.go showlanguage.go show.go drive.go photo.go
          cp -R icons output/screenshots/icons
          cd ../..
          mv ./src/show-program/output/screenshots ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
